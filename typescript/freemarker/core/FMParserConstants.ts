/* Generated from Java with JSweet 2.2.0-SNAPSHOT - http://www.jsweet.org */
/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 * @class
 */
export interface FMParserConstants {}

export namespace FMParserConstants {

    /**
     * End of File.
     */
    export let EOF : number = 0;

    /**
     * RegularExpression Id.
     */
    export let BLANK : number = 1;

    /**
     * RegularExpression Id.
     */
    export let START_TAG : number = 2;

    /**
     * RegularExpression Id.
     */
    export let END_TAG : number = 3;

    /**
     * RegularExpression Id.
     */
    export let CLOSE_TAG1 : number = 4;

    /**
     * RegularExpression Id.
     */
    export let CLOSE_TAG2 : number = 5;

    /**
     * RegularExpression Id.
     */
    export let ATTEMPT : number = 6;

    /**
     * RegularExpression Id.
     */
    export let RECOVER : number = 7;

    /**
     * RegularExpression Id.
     */
    export let IF : number = 8;

    /**
     * RegularExpression Id.
     */
    export let ELSE_IF : number = 9;

    /**
     * RegularExpression Id.
     */
    export let LIST : number = 10;

    /**
     * RegularExpression Id.
     */
    export let ITEMS : number = 11;

    /**
     * RegularExpression Id.
     */
    export let SEP : number = 12;

    /**
     * RegularExpression Id.
     */
    export let FOREACH : number = 13;

    /**
     * RegularExpression Id.
     */
    export let SWITCH : number = 14;

    /**
     * RegularExpression Id.
     */
    export let CASE : number = 15;

    /**
     * RegularExpression Id.
     */
    export let ASSIGN : number = 16;

    /**
     * RegularExpression Id.
     */
    export let GLOBALASSIGN : number = 17;

    /**
     * RegularExpression Id.
     */
    export let LOCALASSIGN : number = 18;

    /**
     * RegularExpression Id.
     */
    export let _INCLUDE : number = 19;

    /**
     * RegularExpression Id.
     */
    export let IMPORT : number = 20;

    /**
     * RegularExpression Id.
     */
    export let FUNCTION : number = 21;

    /**
     * RegularExpression Id.
     */
    export let MACRO : number = 22;

    /**
     * RegularExpression Id.
     */
    export let TRANSFORM : number = 23;

    /**
     * RegularExpression Id.
     */
    export let VISIT : number = 24;

    /**
     * RegularExpression Id.
     */
    export let STOP : number = 25;

    /**
     * RegularExpression Id.
     */
    export let RETURN : number = 26;

    /**
     * RegularExpression Id.
     */
    export let CALL : number = 27;

    /**
     * RegularExpression Id.
     */
    export let SETTING : number = 28;

    /**
     * RegularExpression Id.
     */
    export let OUTPUTFORMAT : number = 29;

    /**
     * RegularExpression Id.
     */
    export let AUTOESC : number = 30;

    /**
     * RegularExpression Id.
     */
    export let NOAUTOESC : number = 31;

    /**
     * RegularExpression Id.
     */
    export let COMPRESS : number = 32;

    /**
     * RegularExpression Id.
     */
    export let COMMENT : number = 33;

    /**
     * RegularExpression Id.
     */
    export let TERSE_COMMENT : number = 34;

    /**
     * RegularExpression Id.
     */
    export let NOPARSE : number = 35;

    /**
     * RegularExpression Id.
     */
    export let END_IF : number = 36;

    /**
     * RegularExpression Id.
     */
    export let END_LIST : number = 37;

    /**
     * RegularExpression Id.
     */
    export let END_ITEMS : number = 38;

    /**
     * RegularExpression Id.
     */
    export let END_SEP : number = 39;

    /**
     * RegularExpression Id.
     */
    export let END_RECOVER : number = 40;

    /**
     * RegularExpression Id.
     */
    export let END_ATTEMPT : number = 41;

    /**
     * RegularExpression Id.
     */
    export let END_FOREACH : number = 42;

    /**
     * RegularExpression Id.
     */
    export let END_LOCAL : number = 43;

    /**
     * RegularExpression Id.
     */
    export let END_GLOBAL : number = 44;

    /**
     * RegularExpression Id.
     */
    export let END_ASSIGN : number = 45;

    /**
     * RegularExpression Id.
     */
    export let END_FUNCTION : number = 46;

    /**
     * RegularExpression Id.
     */
    export let END_MACRO : number = 47;

    /**
     * RegularExpression Id.
     */
    export let END_OUTPUTFORMAT : number = 48;

    /**
     * RegularExpression Id.
     */
    export let END_AUTOESC : number = 49;

    /**
     * RegularExpression Id.
     */
    export let END_NOAUTOESC : number = 50;

    /**
     * RegularExpression Id.
     */
    export let END_COMPRESS : number = 51;

    /**
     * RegularExpression Id.
     */
    export let END_TRANSFORM : number = 52;

    /**
     * RegularExpression Id.
     */
    export let END_SWITCH : number = 53;

    /**
     * RegularExpression Id.
     */
    export let ELSE : number = 54;

    /**
     * RegularExpression Id.
     */
    export let BREAK : number = 55;

    /**
     * RegularExpression Id.
     */
    export let CONTINUE : number = 56;

    /**
     * RegularExpression Id.
     */
    export let SIMPLE_RETURN : number = 57;

    /**
     * RegularExpression Id.
     */
    export let HALT : number = 58;

    /**
     * RegularExpression Id.
     */
    export let FLUSH : number = 59;

    /**
     * RegularExpression Id.
     */
    export let TRIM : number = 60;

    /**
     * RegularExpression Id.
     */
    export let LTRIM : number = 61;

    /**
     * RegularExpression Id.
     */
    export let RTRIM : number = 62;

    /**
     * RegularExpression Id.
     */
    export let NOTRIM : number = 63;

    /**
     * RegularExpression Id.
     */
    export let DEFAUL : number = 64;

    /**
     * RegularExpression Id.
     */
    export let SIMPLE_NESTED : number = 65;

    /**
     * RegularExpression Id.
     */
    export let NESTED : number = 66;

    /**
     * RegularExpression Id.
     */
    export let SIMPLE_RECURSE : number = 67;

    /**
     * RegularExpression Id.
     */
    export let RECURSE : number = 68;

    /**
     * RegularExpression Id.
     */
    export let FALLBACK : number = 69;

    /**
     * RegularExpression Id.
     */
    export let ESCAPE : number = 70;

    /**
     * RegularExpression Id.
     */
    export let END_ESCAPE : number = 71;

    /**
     * RegularExpression Id.
     */
    export let NOESCAPE : number = 72;

    /**
     * RegularExpression Id.
     */
    export let END_NOESCAPE : number = 73;

    /**
     * RegularExpression Id.
     */
    export let UNIFIED_CALL : number = 74;

    /**
     * RegularExpression Id.
     */
    export let UNIFIED_CALL_END : number = 75;

    /**
     * RegularExpression Id.
     */
    export let FTL_HEADER : number = 76;

    /**
     * RegularExpression Id.
     */
    export let TRIVIAL_FTL_HEADER : number = 77;

    /**
     * RegularExpression Id.
     */
    export let UNKNOWN_DIRECTIVE : number = 78;

    /**
     * RegularExpression Id.
     */
    export let STATIC_TEXT_WS : number = 79;

    /**
     * RegularExpression Id.
     */
    export let STATIC_TEXT_NON_WS : number = 80;

    /**
     * RegularExpression Id.
     */
    export let STATIC_TEXT_FALSE_ALARM : number = 81;

    /**
     * RegularExpression Id.
     */
    export let DOLLAR_INTERPOLATION_OPENING : number = 82;

    /**
     * RegularExpression Id.
     */
    export let HASH_INTERPOLATION_OPENING : number = 83;

    /**
     * RegularExpression Id.
     */
    export let SQUARE_BRACKET_INTERPOLATION_OPENING : number = 84;

    /**
     * RegularExpression Id.
     */
    export let ESCAPED_CHAR : number = 92;

    /**
     * RegularExpression Id.
     */
    export let STRING_LITERAL : number = 93;

    /**
     * RegularExpression Id.
     */
    export let RAW_STRING : number = 94;

    /**
     * RegularExpression Id.
     */
    export let FALSE : number = 95;

    /**
     * RegularExpression Id.
     */
    export let TRUE : number = 96;

    /**
     * RegularExpression Id.
     */
    export let INTEGER : number = 97;

    /**
     * RegularExpression Id.
     */
    export let DECIMAL : number = 98;

    /**
     * RegularExpression Id.
     */
    export let DOT : number = 99;

    /**
     * RegularExpression Id.
     */
    export let DOT_DOT : number = 100;

    /**
     * RegularExpression Id.
     */
    export let DOT_DOT_LESS : number = 101;

    /**
     * RegularExpression Id.
     */
    export let DOT_DOT_ASTERISK : number = 102;

    /**
     * RegularExpression Id.
     */
    export let BUILT_IN : number = 103;

    /**
     * RegularExpression Id.
     */
    export let EXISTS : number = 104;

    /**
     * RegularExpression Id.
     */
    export let EQUALS : number = 105;

    /**
     * RegularExpression Id.
     */
    export let DOUBLE_EQUALS : number = 106;

    /**
     * RegularExpression Id.
     */
    export let NOT_EQUALS : number = 107;

    /**
     * RegularExpression Id.
     */
    export let PLUS_EQUALS : number = 108;

    /**
     * RegularExpression Id.
     */
    export let MINUS_EQUALS : number = 109;

    /**
     * RegularExpression Id.
     */
    export let TIMES_EQUALS : number = 110;

    /**
     * RegularExpression Id.
     */
    export let DIV_EQUALS : number = 111;

    /**
     * RegularExpression Id.
     */
    export let MOD_EQUALS : number = 112;

    /**
     * RegularExpression Id.
     */
    export let PLUS_PLUS : number = 113;

    /**
     * RegularExpression Id.
     */
    export let MINUS_MINUS : number = 114;

    /**
     * RegularExpression Id.
     */
    export let LESS_THAN : number = 115;

    /**
     * RegularExpression Id.
     */
    export let LESS_THAN_EQUALS : number = 116;

    /**
     * RegularExpression Id.
     */
    export let ESCAPED_GT : number = 117;

    /**
     * RegularExpression Id.
     */
    export let ESCAPED_GTE : number = 118;

    /**
     * RegularExpression Id.
     */
    export let PLUS : number = 119;

    /**
     * RegularExpression Id.
     */
    export let MINUS : number = 120;

    /**
     * RegularExpression Id.
     */
    export let TIMES : number = 121;

    /**
     * RegularExpression Id.
     */
    export let DOUBLE_STAR : number = 122;

    /**
     * RegularExpression Id.
     */
    export let ELLIPSIS : number = 123;

    /**
     * RegularExpression Id.
     */
    export let DIVIDE : number = 124;

    /**
     * RegularExpression Id.
     */
    export let PERCENT : number = 125;

    /**
     * RegularExpression Id.
     */
    export let AND : number = 126;

    /**
     * RegularExpression Id.
     */
    export let OR : number = 127;

    /**
     * RegularExpression Id.
     */
    export let EXCLAM : number = 128;

    /**
     * RegularExpression Id.
     */
    export let COMMA : number = 129;

    /**
     * RegularExpression Id.
     */
    export let SEMICOLON : number = 130;

    /**
     * RegularExpression Id.
     */
    export let COLON : number = 131;

    /**
     * RegularExpression Id.
     */
    export let OPEN_BRACKET : number = 132;

    /**
     * RegularExpression Id.
     */
    export let CLOSE_BRACKET : number = 133;

    /**
     * RegularExpression Id.
     */
    export let OPEN_PAREN : number = 134;

    /**
     * RegularExpression Id.
     */
    export let CLOSE_PAREN : number = 135;

    /**
     * RegularExpression Id.
     */
    export let OPENING_CURLY_BRACKET : number = 136;

    /**
     * RegularExpression Id.
     */
    export let CLOSING_CURLY_BRACKET : number = 137;

    /**
     * RegularExpression Id.
     */
    export let IN : number = 138;

    /**
     * RegularExpression Id.
     */
    export let AS : number = 139;

    /**
     * RegularExpression Id.
     */
    export let USING : number = 140;

    /**
     * RegularExpression Id.
     */
    export let ID : number = 141;

    /**
     * RegularExpression Id.
     */
    export let OPEN_MISPLACED_INTERPOLATION : number = 142;

    /**
     * RegularExpression Id.
     */
    export let NON_ESCAPED_ID_START_CHAR : number = 143;

    /**
     * RegularExpression Id.
     */
    export let ESCAPED_ID_CHAR : number = 144;

    /**
     * RegularExpression Id.
     */
    export let ID_START_CHAR : number = 145;

    /**
     * RegularExpression Id.
     */
    export let ASCII_DIGIT : number = 146;

    /**
     * RegularExpression Id.
     */
    export let DIRECTIVE_END : number = 147;

    /**
     * RegularExpression Id.
     */
    export let EMPTY_DIRECTIVE_END : number = 148;

    /**
     * RegularExpression Id.
     */
    export let NATURAL_GT : number = 149;

    /**
     * RegularExpression Id.
     */
    export let NATURAL_GTE : number = 150;

    /**
     * RegularExpression Id.
     */
    export let TERMINATING_WHITESPACE : number = 151;

    /**
     * RegularExpression Id.
     */
    export let TERMINATING_EXCLAM : number = 152;

    /**
     * RegularExpression Id.
     */
    export let TERSE_COMMENT_END : number = 153;

    /**
     * RegularExpression Id.
     */
    export let MAYBE_END : number = 154;

    /**
     * RegularExpression Id.
     */
    export let KEEP_GOING : number = 155;

    /**
     * RegularExpression Id.
     */
    export let LONE_LESS_THAN_OR_DASH : number = 156;

    /**
     * Lexical state.
     */
    export let DEFAULT : number = 0;

    /**
     * Lexical state.
     */
    export let NO_DIRECTIVE : number = 1;

    /**
     * Lexical state.
     */
    export let FM_EXPRESSION : number = 2;

    /**
     * Lexical state.
     */
    export let IN_PAREN : number = 3;

    /**
     * Lexical state.
     */
    export let NAMED_PARAMETER_EXPRESSION : number = 4;

    /**
     * Lexical state.
     */
    export let EXPRESSION_COMMENT : number = 5;

    /**
     * Lexical state.
     */
    export let NO_SPACE_EXPRESSION : number = 6;

    /**
     * Lexical state.
     */
    export let NO_PARSE : number = 7;

    /**
     * Literal token values.
     */
    export let tokenImage : Array<any> = ["<EOF>", "<BLANK>", "<START_TAG>", "<END_TAG>", "<CLOSE_TAG1>", "<CLOSE_TAG2>", "<ATTEMPT>", "<RECOVER>", "<IF>", "<ELSE_IF>", "<LIST>", "<ITEMS>", "<SEP>", "<FOREACH>", "<SWITCH>", "<CASE>", "<ASSIGN>", "<GLOBALASSIGN>", "<LOCALASSIGN>", "<_INCLUDE>", "<IMPORT>", "<FUNCTION>", "<MACRO>", "<TRANSFORM>", "<VISIT>", "<STOP>", "<RETURN>", "<CALL>", "<SETTING>", "<OUTPUTFORMAT>", "<AUTOESC>", "<NOAUTOESC>", "<COMPRESS>", "<COMMENT>", "<TERSE_COMMENT>", "<NOPARSE>", "<END_IF>", "<END_LIST>", "<END_ITEMS>", "<END_SEP>", "<END_RECOVER>", "<END_ATTEMPT>", "<END_FOREACH>", "<END_LOCAL>", "<END_GLOBAL>", "<END_ASSIGN>", "<END_FUNCTION>", "<END_MACRO>", "<END_OUTPUTFORMAT>", "<END_AUTOESC>", "<END_NOAUTOESC>", "<END_COMPRESS>", "<END_TRANSFORM>", "<END_SWITCH>", "<ELSE>", "<BREAK>", "<CONTINUE>", "<SIMPLE_RETURN>", "<HALT>", "<FLUSH>", "<TRIM>", "<LTRIM>", "<RTRIM>", "<NOTRIM>", "<DEFAUL>", "<SIMPLE_NESTED>", "<NESTED>", "<SIMPLE_RECURSE>", "<RECURSE>", "<FALLBACK>", "<ESCAPE>", "<END_ESCAPE>", "<NOESCAPE>", "<END_NOESCAPE>", "<UNIFIED_CALL>", "<UNIFIED_CALL_END>", "<FTL_HEADER>", "<TRIVIAL_FTL_HEADER>", "<UNKNOWN_DIRECTIVE>", "<STATIC_TEXT_WS>", "<STATIC_TEXT_NON_WS>", "<STATIC_TEXT_FALSE_ALARM>", "\"${\"", "\"#{\"", "\"[=\"", "<token of kind 85>", "<token of kind 86>", "<token of kind 87>", "\">\"", "\"]\"", "\"-\"", "<token of kind 91>", "<ESCAPED_CHAR>", "<STRING_LITERAL>", "<RAW_STRING>", "\"false\"", "\"true\"", "<INTEGER>", "<DECIMAL>", "\".\"", "\"..\"", "<DOT_DOT_LESS>", "\"..*\"", "\"?\"", "\"??\"", "\"=\"", "\"==\"", "\"!=\"", "\"+=\"", "\"-=\"", "\"*=\"", "\"/=\"", "\"%=\"", "\"++\"", "\"--\"", "<LESS_THAN>", "<LESS_THAN_EQUALS>", "<ESCAPED_GT>", "<ESCAPED_GTE>", "\"+\"", "\"-\"", "\"*\"", "\"**\"", "\"...\"", "\"/\"", "\"%\"", "<AND>", "<OR>", "\"!\"", "\",\"", "\";\"", "\":\"", "\"[\"", "\"]\"", "\"(\"", "\")\"", "\"{\"", "\"}\"", "\"in\"", "\"as\"", "\"using\"", "<ID>", "<OPEN_MISPLACED_INTERPOLATION>", "<NON_ESCAPED_ID_START_CHAR>", "<ESCAPED_ID_CHAR>", "<ID_START_CHAR>", "<ASCII_DIGIT>", "\">\"", "<EMPTY_DIRECTIVE_END>", "\">\"", "\">=\"", "<TERMINATING_WHITESPACE>", "<TERMINATING_EXCLAM>", "<TERSE_COMMENT_END>", "<MAYBE_END>", "<KEEP_GOING>", "<LONE_LESS_THAN_OR_DASH>"];
}




